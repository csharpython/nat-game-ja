msgid ""
msgstr "Project-Id-Version: Game v4.6.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: Wed Mar 20 00:26:19 2024\n"
"Last-Translator: \n"
"Language-Team: none\n"
"Language: ja\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit"

#: Game.Levels.Tutorial.L01_HelloWorld
msgid "はじめの一歩"
msgstr ""

#: Game.Levels.Tutorial.L01_HelloWorld
msgid "## 説明\n"
"`X=X`といった形のゴールを閉じます。\n"
"これは、**定義として**等しい場合のみ有効です。\n"
"ただ、このゲームでは関数の値は「公理」として実装されていることが多いので、\n"
"基本的には左辺と右辺が**完全に**一致する場合のみ有効だと思います。\n"
"(ちなみに、公理は数学の前提的なもの)\n"
"## 補足情報\n"
"このゲームのrflはオリジナルのrflに比べて弱体化されています。\n"
"そうした理由はゲーム性を上げるためです。"
msgstr ""

#: Game.Levels.Tutorial.L01_HelloWorld
msgid "「反射律」って知ってますか？\n"
"「反射律」とは、ある関係Rについて、xRxが成り立つことを表します。\n"
"たとえば、＝などがそうですね。\n"
"今回のような場合なら、"rfl"を使えます！"
msgstr ""

#: Game.Levels.Tutorial.L01_HelloWorld
msgid "左辺と右辺が同じ時は、rflを使うとゴールを閉じれます。"
msgstr ""

#: Game.Levels.Tutorial.L01_HelloWorld
msgid "「33 * x + 24 * y = 33 * x + 24 * yである。だから33 * x + 24 * y = 33 * x + 24 * y なのだ。」\n"
"では済まない命題も結構あるのですが...まあそれの示し方は次のステージで話しましょう。\n"
"ちなみに、このゲームのrflはオリジナルのrflに比べて弱体化されています。\n"
"そうした理由はゲーム性を上げるためです。"
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "Eq."
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "## 説明\n"
"例えば、`X=Y`という形の仮定や定理`h`があった場合、rw[h]を使用することで、\n"
"ゴール内の**全ての**`X`が`Y`に置き換わります。\n"
"\n"
"## 変種\n"
"`rw[←h]` : `Y`が`X`になります。\n"
"\n"
"`rw[h1,h2]` : `rw[h1]`,`rw[h2]`を順番に実行します。\n"
"\n"
"`rw[h1,h2,h3]` : もちろん3つ以上の置き換えも可能です。\n"
"\n"
"`rw[h1] at h2` : **`h2`に対して**`rw[h1]`を実行します。\n"
"\n"
"もしかしたら、私が把握できていないだけで他にもあるかも知れません！\n"
"\n"
"## 補足情報\n"
"本来の`rw`は置き換え後に`rfl`を実行します。\n"
"そうしなかった理由は、もちろんゲーム性です。"
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "同じことを表すものってよくありますよね。\n"
"例えば、「力」と「パワー」や、「1の次の数」と「2」などがあります。\n"
"Lean4で同じことを表すものを置き換えるときは"rewrite"を使います。\n"
"こうすることで、「力」と「パワー」が「力」と「力」になるので、rflが使えます！\n"
""
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "rw[h]を使おう。"
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "イースターエッグ発見！ #1"
msgstr ""

#: Game.Levels.Tutorial.L02_ReWrite
msgid "いいですね！Lean4では、仮定として用意した等式だけでなく、\n"
"すでに分かったこと、「定理」(もしくは「補題」)を番う方法もあります！\n"
"詳細はLv4で！\n"
"\n"
"ちなみに、`rewrite`より強いTactic`rw`がありますが、\n"
"それを使わなかった理由はもちろん、ゲーム性を上げるためです。"
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "逆走"
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "(Lv2で見つけた人もいるかもしれませんが)\n"
"実は`h : X=Y`という仮定がある場合、\n"
"ゴールの`X`を`Y`に置き換えるだけでなく、\n"
"**`Y`を`X`に置き換えることもできます**\n"
"早速試してみましょう！\n"
""
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "`rw`のマニュアルは読みましたか？"
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "イースターエッグ発見！ #2"
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "イースターエッグ発見！ #2"
msgstr ""

#: Game.Levels.Tutorial.L03_etirWeR
msgid "このように、数学では\n"
"「逆から考える」というテクニックが有効なことがあります。\n"
"ゴールを閉じるために必要なことを考えると、\n"
"自ずと答えが見えてくるでしょう。\n"
""
msgstr ""

#: Game.Levels.Tutorial
msgid "Tutorial"
msgstr ""

#: Game.Levels.Tutorial
msgid "\n"
"チュートリアルです。このワールドでLean4に慣れましょう。\n"
""
msgstr ""

#: Game
msgid "自然数ゲーム"
msgstr ""

#: Game
msgid "\n"
"こんにちは。自然数ゲームへようこそ。\n"
"このゲームは、Leanを使って様々な自然数の性質を証明します。\n"
"おっと、そんなに身構える必要はありませんよ。\n"
""
msgstr ""

#: Game
msgid "\n"
"Githubのリンク：https://github.com/csharpython/nat-game-ja\n"
"使ったテンプレート：https://github.com/hhu-adam/GameSkeleton\n"
"参考：https://github.com/leanprover-community/NNG4/\n"
"Lean jaのDiscord：https://discord.com/invite/p32ZfnVawh\n"
""
msgstr ""

#: Game
msgid "自然数ゲーム"
msgstr ""

#: Game
msgid "自然数の性質を証明してみましょう"
msgstr ""
